#Wrangler config for Sonic Crypto MCP Server

name = "coindesk-mcp"
main = "src/index.ts"
compatibility_date = "2024-09-23"
compatibility_flags = ["nodejs_compat"]

# Worker configuration
[env.production]
name = "coindesk-mcp-prod"

[env.staging]
name = "coindesk-mcp-staging"

# Environment variables
[vars]
API_VERSION = "1.0.0"
ENVIRONMENT = "production"
MCP_SERVER_NAME = "sonic-crypto-mcp"
MCP_SERVER_VERSION = "1.0.0"
MAX_CHART_CONTAINERS = "10"

# Discord Channel IDs
NFT_DISCORD_CHANNEL_ID = "1333603176762576966"
TWEET_DISCORD_CHANNEL_ID = "1333615004305330348"

# NFT Gating Configuration
BANDIT_KIDZ_CONTRACT = "0x45bc8a938e487fde4f31a7e051c2b63627f6f966"
PAINTSWAP_COLLECTION_URL = "https://paintswap.finance/marketplace/collections/0x45bc8a938e487fde4f31a7e051c2b63627f6f966"

# dRPC Configuration
DRPC_HTTP_URL = "https://lb.drpc.org/sonic/"

# AI Gateway Configuration
AI_GATEWAY_ID = "sonic-server"
HUGGINGFACE_GATEWAY = "https://gateway.ai.cloudflare.com/v1/ff3c5e2beaea9f85fee3200bfe28da16/sonic-server/huggingface"

# AI Gateway binding for enhanced analysis
[ai]
binding = "AI"

# Browser Rendering for web scraping (DexScreener trending)
[browser]
binding = "BROWSER"

# Static Assets for React Dashboard
# Commented out until React dashboard is built
# [assets]
# directory = "./sonic-crypto-dashboard/out"
# binding = "ASSETS"

# Note: AI Gateway configuration will be set up separately

# R2 Storage for historical data
[[r2_buckets]]
binding = "HISTORICAL_DATA"
bucket_name = "sonic-crypto-historical"
preview_bucket_name = "sonic-crypto-historical-preview"

# Durable Objects - Caching & Sessions
[[durable_objects.bindings]]
name = "CRYPTO_CACHE"
class_name = "CryptoDataCache"

[[durable_objects.bindings]]
name = "MCP_SESSION"
class_name = "MCPSessionManager"

# Durable Objects - AI Agents
[[durable_objects.bindings]]
name = "OVERVIEW_AGENT"
class_name = "OverviewAgent"

[[durable_objects.bindings]]
name = "CHARTS_AGENT"
class_name = "ChartsAgent"

# TODO: Implement remaining agents (Issues #5-#7)
# [[durable_objects.bindings]]
# name = "TRADING_AGENT"
# class_name = "TradingAgent"

# [[durable_objects.bindings]]
# name = "INTELLIGENCE_AGENT"
# class_name = "IntelligenceAgent"

# [[durable_objects.bindings]]
# name = "CHAT_AGENT"
# class_name = "ChatAgent"

# Cloudflare Container for Charts Agent (Python ML)
[[containers]]
class_name = "ChartsContainer"
image = "./ChartsAgentDockerfile"
max_instances = 10
instance_type = { vcpu = 4, memory_mib = 4096, disk_mb = 6144 }
rollout_step_percentage = 100

# KV Namespaces for caching and session management
[[kv_namespaces]]
binding = "SONIC_CACHE"
id = "b3527f44e06e4fc8a78129b23055f3a1"

[[kv_namespaces]]
binding = "API_RATE_LIMIT"
id = "cb20ca89e760482cafdd9aa6ae896115"

# Analytics Engine for usage tracking
[[analytics_engine_datasets]]
binding = "ANALYTICS"

# Queue for background processing
[[queues.producers]]
binding = "CRYPTO_QUEUE"
queue = "sonic-crypto-processing"

# D1 Database for metadata and configuration
[[d1_databases]]
binding = "CONFIG_DB"
database_name = "sonic-crypto-config"
database_id = "1e47552e-03a8-420e-8365-58eb412d6040"

# Rate limiting
[limits]
cpu_ms = 50000

# Build configuration
[build]
command = "npm run build"

# Custom domain configuration
[[routes]]
pattern = "ss.srvcflo.com/*"
zone_name = "srvcflo.com"

# Workers Logs configuration
[observability.logs]
enabled = true

# Workflows configuration - Data Management
[[workflows]]
binding = "DATA_UPDATE_WORKFLOW"
name = "sonic-data-update"
class_name = "DataUpdateWorkflow"

[[workflows]]
binding = "DATA_SEEDING_WORKFLOW"
name = "sonic-data-seeding"
class_name = "DataSeedingWorkflow"

# Workflows configuration - Agent Operations
# TODO: Implement agent-specific workflows (Issues #4-#6)
# [[workflows]]
# binding = "CHART_ANALYSIS_WORKFLOW"
# name = "sonic-chart-analysis"
# class_name = "ChartAnalysisWorkflow"

# [[workflows]]
# binding = "REPORT_GENERATION_WORKFLOW"
# name = "sonic-report-generation"
# class_name = "ReportGenerationWorkflow"

# [[workflows]]
# binding = "TRADE_APPROVAL_WORKFLOW"
# name = "sonic-trade-approval"
# class_name = "TradeApprovalWorkflow"

# [[workflows]]
# binding = "SOCIAL_INGESTION_WORKFLOW"
# name = "sonic-social-ingestion"
# class_name = "SocialIngestionWorkflow"

# Durable Objects migrations
[[migrations]]
tag = "v1"
new_classes = [ "CryptoDataCache", "MCPSessionManager" ]

[[migrations]]
tag = "v2"
new_classes = [ "OverviewAgent" ]

[[migrations]]
tag = "v3"
new_classes = [ "ChartsAgent", "ChartsContainer" ]
# TODO: Add remaining agents when implemented: TradingAgent, IntelligenceAgent, ChatAgent

# Cron triggers for automated operations
[triggers]
crons = [
  "*/5 * * * *",  # Update trending pairs (Overview Agent) - every 5 minutes
  "0 */1 * * *",  # Refresh market data (Trading Agent) - hourly
  "0 8 * * *",    # Morning report (Intelligence Agent) - 8:00 AM UTC
  "0 12 * * *",   # Midday report (Intelligence Agent) - 12:00 PM UTC
  "0 20 * * *",   # Evening report (Intelligence Agent) - 8:00 PM UTC
  "0 0 * * *"     # Daily data cleanup - midnight UTC
]

# R2 Storage for market reports
[[r2_buckets]]
binding = "MARKET_REPORTS"
bucket_name = "sonic-market-reports"
preview_bucket_name = "sonic-market-reports-preview"

# Cloudflare Pipelines for Discord data ingestion
# TODO: Create pipelines first, then uncomment (Issue #6)
# [[pipelines]]
# binding = "DISCORD_NFT_PIPELINE"
# pipeline = "sonic-nft-feed"

# [[pipelines]]
# binding = "DISCORD_TWITTER_PIPELINE"
# pipeline = "sonic-twitter-feed"

# Secrets (set with: wrangler secret put SECRET_NAME)
# COINDESK_API_KEY - CoinDesk API authentication
# COINMARKETCAP_API_KEY - CoinMarketCap API for trending/global data (FREE PLAN)
# DISCORD_BOT_TOKEN - Discord bot token for community intelligence
# BRAVE_API_KEY - Brave Search API for news
# DRPC_API_KEY - dRPC node API key for Web3 RPC calls
# AI_GATEWAY_TOKEN - AI Gateway authentication: k1ZP2VZVCPkjJD_Z7GVbh_L9M41N3NgaoLmyb0uR
# ANTHROPIC_API_KEY - Alternative AI provider (optional)
# PIPELINE_BEARER_TOKEN - Bearer token for Discord pipeline authentication